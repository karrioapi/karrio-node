/**
 * Purplship API
 *  ## API Reference  Purplship is an open source multi-carrier shipping API that simplifies the integration of logistic carrier services.  The Purplship API is organized around REST. Our API has predictable resource-oriented URLs, accepts JSON-encoded  request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.  The Purplship API differs for every account as we release new versions. These docs are customized to your version of the API.   ## Versioning  When backwards-incompatible changes are made to the API, a new, dated version is released.  The current version is `2021.7`.   Read our API changelog and to learn more about backwards compatibility.  As a precaution, use API versioning to check a new API version before committing to an upgrade.   ## Pagination  All top-level API resources have support for bulk fetches via \"list\" API methods. For instance, you can list addresses,  list shipments, and list trackers. These list API methods share a common structure, taking at least these  two parameters: limit, and offset.  Purplship utilizes offset-based pagination via the offset and limit parameters. Both parameters take a number as value (see below) and return objects in reverse chronological order.  The offset parameter returns objects listed after an index.  The limit parameter take a limit on the number of objects to be returned from 1 to 100.   ```json {     \"next\": \"/v1/shipments?limit=25&offset=25\",     \"previous\": \"/v1/shipments?limit=25&offset=25\",     \"results\": [     ] } ```  ## Environments  The Purplship API offer the possibility to create and retrieve certain objects in `test_mode`. In development, it is therefore possible to add carrier connections, get live rates,  buy labels, create trackers and schedule pickups in `test_mode`.  
 *
 * The version of the OpenAPI document: 2021.7
 * Contact: hello@purplship.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddressData from './AddressData';
import CustomsData from './CustomsData';
import ParcelData from './ParcelData';
import Payment from './Payment';
import Rate from './Rate';

/**
 * The ShippingRequest model module.
 * @module model/ShippingRequest
 * @version 2021.7
 */
class ShippingRequest {
    /**
     * Constructs a new <code>ShippingRequest</code>.
     * @alias module:model/ShippingRequest
     * @param shipper {module:model/AddressData} 
     * @param recipient {module:model/AddressData} 
     * @param parcels {Array.<module:model/ParcelData>} The shipment's parcels
     * @param payment {module:model/Payment} 
     * @param selected_rate_id {String} The shipment selected rate.
     * @param rates {Array.<module:model/Rate>} The list for shipment rates fetched previously
     */
    constructor(shipper, recipient, parcels, payment, selected_rate_id, rates) { 
        
        ShippingRequest.initialize(this, shipper, recipient, parcels, payment, selected_rate_id, rates);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, shipper, recipient, parcels, payment, selected_rate_id, rates) { 
        obj['shipper'] = shipper;
        obj['recipient'] = recipient;
        obj['parcels'] = parcels;
        obj['payment'] = payment;
        obj['selected_rate_id'] = selected_rate_id;
        obj['rates'] = rates;
    }

    /**
     * Constructs a <code>ShippingRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShippingRequest} obj Optional instance to populate.
     * @return {module:model/ShippingRequest} The populated <code>ShippingRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShippingRequest();

            if (data.hasOwnProperty('shipper')) {
                obj['shipper'] = AddressData.constructFromObject(data['shipper']);
            }
            if (data.hasOwnProperty('recipient')) {
                obj['recipient'] = AddressData.constructFromObject(data['recipient']);
            }
            if (data.hasOwnProperty('parcels')) {
                obj['parcels'] = ApiClient.convertToType(data['parcels'], [ParcelData]);
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], Object);
            }
            if (data.hasOwnProperty('payment')) {
                obj['payment'] = Payment.constructFromObject(data['payment']);
            }
            if (data.hasOwnProperty('customs')) {
                obj['customs'] = CustomsData.constructFromObject(data['customs']);
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
            if (data.hasOwnProperty('label_type')) {
                obj['label_type'] = ApiClient.convertToType(data['label_type'], 'String');
            }
            if (data.hasOwnProperty('selected_rate_id')) {
                obj['selected_rate_id'] = ApiClient.convertToType(data['selected_rate_id'], 'String');
            }
            if (data.hasOwnProperty('rates')) {
                obj['rates'] = ApiClient.convertToType(data['rates'], [Rate]);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/AddressData} shipper
 */
ShippingRequest.prototype['shipper'] = undefined;

/**
 * @member {module:model/AddressData} recipient
 */
ShippingRequest.prototype['recipient'] = undefined;

/**
 * The shipment's parcels
 * @member {Array.<module:model/ParcelData>} parcels
 */
ShippingRequest.prototype['parcels'] = undefined;

/**
 *  The options available for the shipment.<br/> Please consult [the reference](#operation/references) for additional specific carriers options. 
 * @member {Object} options
 */
ShippingRequest.prototype['options'] = undefined;

/**
 * @member {module:model/Payment} payment
 */
ShippingRequest.prototype['payment'] = undefined;

/**
 * @member {module:model/CustomsData} customs
 */
ShippingRequest.prototype['customs'] = undefined;

/**
 * The shipment reference
 * @member {String} reference
 */
ShippingRequest.prototype['reference'] = undefined;

/**
 * The shipment label file type.
 * @member {module:model/ShippingRequest.LabelTypeEnum} label_type
 * @default 'PDF'
 */
ShippingRequest.prototype['label_type'] = 'PDF';

/**
 * The shipment selected rate.
 * @member {String} selected_rate_id
 */
ShippingRequest.prototype['selected_rate_id'] = undefined;

/**
 * The list for shipment rates fetched previously
 * @member {Array.<module:model/Rate>} rates
 */
ShippingRequest.prototype['rates'] = undefined;





/**
 * Allowed values for the <code>label_type</code> property.
 * @enum {String}
 * @readonly
 */
ShippingRequest['LabelTypeEnum'] = {

    /**
     * value: "PDF"
     * @const
     */
    "PDF": "PDF",

    /**
     * value: "ZPL"
     * @const
     */
    "ZPL": "ZPL"
};



export default ShippingRequest;

